function horizontalDistance(e1: entity, e2: entity) :: number:
  set {_e1x} to x coordinate of {_e1}
  set {_e1z} to z coordinate of {_e1}
  set {_e2x} to x coordinate of {_e2}
  set {_e2z} to z coordinate of {_e2}
  set {_dist} to sqrt(({_e1x}-{_e2x})^2+({_e1z}-{_e2z})^2)
  return {_dist}

function horizontalDistanceWithMaxHeight(e1: entity, e2: entity, heightMax: number) :: number:
  set {_e1x} to x coordinate of {_e1}
  set {_e1y} to y coordinate of {_e1}
  set {_e1z} to z coordinate of {_e1}
  set {_e2x} to x coordinate of {_e2}
  set {_e2y} to y coordinate of {_e2}
  set {_e2z} to z coordinate of {_e2}
  set {_dist} to sqrt(({_e1x}-{_e2x})^2+({_e1z}-{_e2z})^2)
  if abs({_e1y}-{_e2y}) is less than {_heightMax}:
    return {_dist}
  else:
    return 69420

function root(num: number, root: number) :: number:
  return {_number} ^ (1/{_root})

function randomTrack() :: text:
  set {_rand} to random integer from 1 to 2
  if {_rand} is 1:
    set {_track} to "dev0"
  else if {_rand} is 2:
    set {_track} to "dev1"

  return {_track}
